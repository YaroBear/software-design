[Venkat 09/12/17 08:43 AM CEST]
synopsis: almost done 

details:
Diagram:
If cardinality is 1, we do not put 1 as that is the default.

We are using shaded diamonds - means composition, but that is the most restrictive relationship. Better to use aggregation/unshaded diamond instead at this level of design.

It would be better to show GUI separated form logic of the game.

Text:

1. Good details. We need to include a paragraph discussing how GUI will be handled and how it will be separated from the logic of the game, the details of which has been presented so far.

------------------------------------------------------------------------------
[Venkat 09/11/17 10:06 AM CEST]
synopsis: good start, let's present some details on separation of concerns 

details:
Diagram:
Please show cardinality - the number of objects of that class that will participate in the relationship.

Let's show the class that will deal with GUI separated from the one that will deal with logic.

Text:
1.
Please show all the classes mentioned here in the diagram.

Good reasoning for the design decisions, nice.

We can remove most of the low level details from here, like specific properties and the code sample, not useful at this level of design.

Instead, let's focus on high level details, layers, separation of concerns, distribution of logic, state, GUI among classes.

2.
You may use any of these languages you like. You may switch to another language later if you like, but don't switch too frequently.

3.
Good.

------------------------------------------------------------------------------
